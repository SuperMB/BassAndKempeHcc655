@*
    Add To Curation Index
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model HccCoffeeMaker.Models.CoffeeMakerModels.AmazonProductModel
@using HccCoffeeMaker.Models.CoffeeMakerModels
@{
    ViewData["Title"] = "Create";
}



<script type="text/javascript" src="~/js/bsjsCore/Readyable.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/BSAutoSwitch.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/BSService.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/BSExtension.js"></script>
<!-- BSUtils, Downloader, ParsedURL, and simplBase are helper classes. Include them, but don't really worry about them-->
<script type="text/javascript" src="~/js/bsjsCore/BSUtils.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/ParsedURL.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/Downloader.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/simpl/simplBase.js"></script>
<!-- RepoMan loads a Meta-metadata repository. Avoid doing anything with it directly; it's messy-->
<script type="text/javascript" src="~/js/bsjsCore/RepoMan.js"></script>
<script type="text/javascript" src="~/js/semantics.js"></script>
<script type="text/javascript" src="~/js/Create.js"></script>


<link type="text/css" rel="stylesheet" href="~/css/Create.css" />
<link type="text/css" rel="stylesheet" href="~/css/Curation.css" />
<script type="text/javascript" src="~/js/Curation.js"></script>


<div style="clear:both;"></div>

<div class="col-xs-4">
    <div class="leftContainer">
        
        <div class="category" id="colorCategory">
            <label class="categoryLabel">Color</label><br />
            @foreach (AmazonProductModel.ColorOptions color in Enum.GetValues(typeof(AmazonProductModel.ColorOptions)))
            {
                <div class="item">
                    <input type="text"
                            name="ColorOptions"
                            readonly
                            draggable="true"
                            value="@color.ToString()"
                            ondragstart="Dragging(event, this.id)"
                            ondragend="StopDragging(event, this.id)"
                            id="@color.ToString()"> <br />
                </div>
            }
        </div>
        <div class="categoryHidden" id="colorCategoryHidden">
            <label class="categoryLabel">Color</label><br />
        </div>

        <div class="category" id="servingSizeCategory">
            <label class="categoryLabel">Serving Size</label><br />
            @foreach (AmazonProductModel.ServingSizeOptions servingSize in Enum.GetValues(typeof(AmazonProductModel.ServingSizeOptions)))
            {
                <div class="item">
                    <input type="text"
                            name="ServingSizeOptions"
                            readonly
                            draggable="true"
                            value="@servingSize.ToString()"
                            ondragstart="Dragging(event, this.id)"
                            ondragend="StopDragging(event, this.id)"
                            id="@servingSize.ToString()"> <br />
                </div>

            }
        </div>
        <div class="categoryHidden" id="servingSizeCategoryHidden">
            <label class="categoryLabel">Serving Size</label><br />
        </div>

        <div class="category" id="brewingTimeCategory">
            <label class="categoryLabel">Brewing Time</label><br />
            @foreach (AmazonProductModel.BrewingTimeOptions brewingTime in Enum.GetValues(typeof(AmazonProductModel.BrewingTimeOptions)))
            {
                <div class="item">
                    <input type="text"
                            name="BrewingTimeOptions"
                            readonly
                            draggable="true"
                            value="@brewingTime.ToString()"
                            ondragstart="Dragging(event, this.id)"
                            ondragend="StopDragging(event, this.id)"
                            id="@brewingTime.ToString()"> <br />
                </div>

            }
        </div>
        <div class="categoryHidden" id="brewingTimeCategoryHidden">
            <label class="categoryLabel">Brewing Time</label><br />
        </div>

        <div class="category" id="brandCategory">
            <label class="categoryLabel">Brand</label><br />
            @foreach (AmazonProductModel.BrandOptions brand in Enum.GetValues(typeof(AmazonProductModel.BrandOptions)))
            {
                <div class="item">
                    <input type="text"
                            name="BrandOptions"
                            readonly
                            draggable="true"
                            value="@brand.ToString()"
                            ondragstart="Dragging(event, this.id)"
                            ondragend="StopDragging(event, this.id)"
                            id="@brand.ToString()"> <br />
                </div>

            }
        </div>
        <div class="categoryHidden" id="brandCategoryHidden">
            <label class="categoryLabel">Brand</label><br />
        </div>

        <div class="category" id="warrantyCategory">
            <label class="categoryLabel">Warranty</label><br />
            @foreach (AmazonProductModel.WarrantyOptions warranty in Enum.GetValues(typeof(AmazonProductModel.WarrantyOptions)))
            {
                <div class="item">
                    <input type="text"
                            name="WarrantyOptions"
                            readonly
                            draggable="true"
                            value="@warranty.ToString()"
                            ondragstart="Dragging(event, this.id)"
                            ondragend="StopDragging(event, this.id)"
                            id="@warranty.ToString()"> <br />
                </div>

            }
        </div>
        <div class="categoryHidden" id="warrantyCategoryHidden">
            <label class="categoryLabel">Warranty</label><br />
        </div>

        <div class="category" id="qualityOfCoffeeCategory">
            <label class="categoryLabel">Quality of Coffee</label><br />
            @foreach (AmazonProductModel.QualityOfCoffeeOptions qualityOfCoffee in Enum.GetValues(typeof(AmazonProductModel.QualityOfCoffeeOptions)))
            {
                <div class="item">
                    <input type="text"
                            name="QualityOfCoffeeOptions"
                            readonly
                            draggable="true"
                            value="@qualityOfCoffee.ToString()"
                            ondragstart="Dragging(event, this.id)"
                            ondragend="StopDragging(event, this.id)"
                            id="@qualityOfCoffee.ToString()"> <br />
                </div>

            }
        </div>
        <div class="categoryHidden" id="qualityOfCoffeeCategoryHidden">
            <label class="categoryLabel">Quality of Coffee</label><br />
        </div>


        <div class="categoryHidden" id="titleHidden">
            <label class="categoryLabel">Title</label><br />
            <div class="item">
                <input type="text"
                       readonly
                       id="titleHiddenItem"> <br />
            </div>
        </div>

        <div class="categoryHidden" id="descriptionHidden">
            <label class="categoryLabel">Description</label><br />
            <div class="item">
                <input type="text"
                       readonly
                       id="descriptionHiddenItem"> <br />
            </div>
        </div>

        <div class="categoryHidden" id="priceHidden">
            <label class="categoryLabel">Price</label><br />
            <div class="item">
                <input type="text"
                       readonly
                       id="priceHiddenItem"> <br />
            </div>
        </div>


        <div class="categoryHidden" id="hiddenElementForWidth" style="display:block;visibility:hidden;">
            <label class="categoryLabel">hiddenElementForWidth</label><br />
        </div>

    </div>
<div style="font-size:var(--smallMediumFont);text-align:center;">
    Drag/drop labels to the form to add attributes. Ex. drag Red.
</div>
</div>
<div class="col-xs-8" style="text-align:center;">

    <div style="display:inline-block;" id="noImage">
        <div style="display:table-cell;
            vertical-align:middle;
            text-align:center;
            opacity:0.7;
            width:100%;
            height:450px;
            font-size:var(--smallMediumFont);
            ">
            No image loaded from URL
        </div>
    </div>

    <div style="width:100%;height:450px;text-align:center;display:none;" 
         id="productImageContainer" >
        <img style="height:100%;
            display:inline;
            border:solid 2px var(--lightSeafoam);
            border-radius:10px;
            /*visibility:hidden;*/
            " 
             id="productImage"/>
    </div>
</div>

<div style="clear:both;">
    <form asp-action="CreateFromUrl" id="createForm">
        <div class="dropArea"
             ondragover="DragEnter(event, this.id)"
             ondragleave="DragExit(event, this.id)"
             ondrop="Drop(event, this.id)"
             >
            <div style="width:49%;text-align:left;display:inline-block;">

                <span style="font-size:var(--smallMediumFont);text-align:center;position:relative;left:0;">
                    Paste URL Below, then Load:
                </span>

            </div>
            <div style="width:49%;text-align:right;display:inline-block;">

                <div class="blueButton" style="width:200px;vertical-align:bottom;height:50px;position:relative;right:0;" onclick="GetJson(event, this.id)">
                    <span style="position:relative;top:8px">Load from URL</span>
                </div>
            </div>
            <input style="width:1700px;max-width:100%;display:block;text-align:left;" type="text" name="location" value="" id="url" />
            <input style="display:none;" type="text" name="metadata" id="metaData" />
        
            <div id="dropAreaID" style="height:535px;">

            </div>
        

            <div style="width:100%;text-align:right;">
                <div class="blueButton" style="width:200px;height:50px;text-align:center;" onclick="SubmitForm(event, this.id)">
                    <span style="position:relative;top:8px">Create</span>
                </div>
            </div>
        </div>
        <div style="clear:both;" class="">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>

    </form>
</div>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}