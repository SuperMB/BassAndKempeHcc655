@*
    Add To Curation Index
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model HccCoffeeMaker.Models.CoffeeMakerModels.AmazonProductModel
@using HccCoffeeMaker.Models.CoffeeMakerModels
@{
    ViewData["Title"] = "Create";
}



<script type="text/javascript" src="~/js/bsjsCore/Readyable.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/BSAutoSwitch.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/BSService.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/BSExtension.js"></script>
<!-- BSUtils, Downloader, ParsedURL, and simplBase are helper classes. Include them, but don't really worry about them-->
<script type="text/javascript" src="~/js/bsjsCore/BSUtils.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/ParsedURL.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/Downloader.js"></script>
<script type="text/javascript" src="~/js/bsjsCore/simpl/simplBase.js"></script>
<!-- RepoMan loads a Meta-metadata repository. Avoid doing anything with it directly; it's messy-->
<script type="text/javascript" src="~/js/bsjsCore/RepoMan.js"></script>
<script type="text/javascript" src="~/js/semantics.js"></script>
<script type="text/javascript" src="~/js/Create.js"></script>

<div style="width:100%;height:400px;text-align:center;">
    <img id="productImage" style="height:100%;
            display:inline;
            border:solid 2px var(--lightSeafoam);
            border-radius:10px;
            visibility:hidden;
            " />
</div>

<h2>Create</h2>
<button id="loadJson" onclick="GetJson()">Load Json</button>
<link type="text/css" rel="stylesheet" href="~/css/Create.css" />
<link type="text/css" rel="stylesheet" href="~/css/Curation.css" />
<script type="text/javascript" src="~/js/Curation.js"></script>



<div class="col-xs-6">

    <div class="" style="text-align:center;">
        @*<h4>AmazonProductModel</h4>
        <hr />
        <div class="facetToAdd">
            <label class="controlLabel">Amazon URL</label>
            <div class="">
                <input type="text" name="url" id="url" ondrop="GetJson()" /><br />
                <input type="text" name="metaData" id="metaData" style="display:none;" />
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Color</label>
            <div class="">
                @foreach (AmazonProductModel.ColorOptions color in Enum.GetValues(typeof(AmazonProductModel.ColorOptions)))
                {
                    <input type="radio" name="ColorOptions" value="@color.ToString()"> @color.ToString() <br />
                }
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Durability</label>
            <div class="">
                @foreach (AmazonProductModel.DurabilityOptions durability in Enum.GetValues(typeof(AmazonProductModel.DurabilityOptions)))
                {
                    <input type="radio" name="DurabilityOptions" value="@durability.ToString()"> @durability.ToString() <br />
                }
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Serving Size</label>
            <div class="">
                @foreach (AmazonProductModel.ServingSizeOptions servingSize in Enum.GetValues(typeof(AmazonProductModel.ServingSizeOptions)))
                {
                    <input type="radio" name="ServingSizeOptions" value="@servingSize.ToString()"> @servingSize.ToString() <br />
                }
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Brewing Time</label>
            <div class="">
                @foreach (AmazonProductModel.BrewingTimeOptions brewingTime in Enum.GetValues(typeof(AmazonProductModel.BrewingTimeOptions)))
                {
                    <input type="radio" name="BrewingTimeOptions" value="@brewingTime.ToString()"> @brewingTime.ToString() <br />
                }
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Brand</label>
            <div class="">
                @foreach (AmazonProductModel.BrandOptions brandOptions in Enum.GetValues(typeof(AmazonProductModel.BrandOptions)))
                {
                    <input type="radio" name="BrandOptions" value="@brandOptions.ToString()"> @brandOptions.ToString() <br />
                }
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Warranty</label>
            <div class="">
                @foreach (AmazonProductModel.WarrantyOptions warranty in Enum.GetValues(typeof(AmazonProductModel.WarrantyOptions)))
                {
                    <input type="radio" name="WarrantyOptions" value="@warranty.ToString()"> @warranty.ToString() <br />
                }
            </div>
        </div>
        <div class="facetToAdd">
            <label class="controlLabel">Quality of Coffee</label>
            <div class="">
                @foreach (AmazonProductModel.QualityOfCoffeeOptions qualityOfCoffee in Enum.GetValues(typeof(AmazonProductModel.QualityOfCoffeeOptions)))
                {
                    <input type="radio" name="QualityOfCoffeeOptions" value="@qualityOfCoffee.ToString()"> @qualityOfCoffee.ToString() <br />
                }
            </div>
        </div>
        <div style="clear:both;" class="">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>*@


    <div class="category">
        <label class="categoryLabel">Color</label><br />
            @foreach (AmazonProductModel.ColorOptions color in Enum.GetValues(typeof(AmazonProductModel.ColorOptions)))
            {
                <div class="item">
                    <input type="text"
                           name="ColorOptions"
                           readonly
                           draggable="true"
                           value="@color.ToString()"
                           ondragstart="Dragging(event, this.id)"
                           ondragend="StopDragging(event, this.id)"
                           id="@color.ToString()"
                           > <br />
                </div>
            }
    </div>
        ...

    </div>
</div>
<div class="col-xs-6">

    <form asp-action="CreateFromUrl">
        <div class="dropArea"
             ondragover="DragEnter(event, this.id)"
             ondragleave="DragExit(event, this.id)"
             ondrop="Drop(event, this.id)"
             id="dropAreaID"
             >

        </div>
        <div style="clear:both;" class="">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </form>
</div>











@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}